// Worksheet 1
// CS 261
// Philip Warton

What is the time complexity of the following algorithms?

Linear search		|	O(n)
Binary search		|	O(log(n))
countOccurrences	|	O(n)
isPrime				|	O(sqrt(n))
printPrimes			|	O(n(sqrt(n)))
matMult				|	O(n^3)
selection sort		|	O(n^2)

Estimate the big-Oh time complexity of the following code snippets

for (i = 0; i < n; i++) ...
O(n)

for (i = n; i > 0; i--) ...
O(n)

for (i = 0; i * i < n; i++) ...
O(sqrt(n))

for (i = n; i > 0; i = i/2) ...
O(log(n))

for (i = n; i > 0; i = i >>2) ...
O(log(n))

for (i = 0; i < n; i++)
	for (j = 0; j < n; j++)
O(n^2)

for (i = 0; i < n; i++)
	for (j = 0; j < i; j++)
O(n^2)

for (i = 0; i < n; i++)
	for(j = 0; j < 13; j++)
O(n)

for (i = n; i > 0; i = i/2)
	for (j = n; j > 0; j = j/2)
O(log^2(n))

for (i = 0; i < n; i++)
	for (j = n; j > 0; j = j/2)
O(nlog(n))
